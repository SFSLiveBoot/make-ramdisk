#!/bin/bash

libdir="/lib"

include_man=1

while test -n "$1";do
  case "$1" in
    -m)
      include_man=""
    ;;
    -b)
      shift
      bindir="$1"
    ;;
    -l)
      shift
      libdir="$1"
    ;;
    -p)
      shift
      libpath="$1"
    ;;
    *)
      break
    ;;
  esac
  shift
done

dst="$1"
shift

if test -z "$dst";then
  echo "Usage: $0 [ -m ] [ -b bindir ] [ -l libdir ] [ -p libpath ] destroot [executable...]"
  echo "Where:"
  echo " -m exclude manpages"
  echo " destroot - root directory of new files"
  echo " bindir - program files path in destroot [default: original location]"
  echo " libdir - library path in destroot [default: /lib]"
  echo " libpath - additional library path (not related to destroot)"

  exit 1
fi

libdirs="/lib /usr/lib /lib/systemd $(ldconfig -p | sed -ne '/=>/{s@.*=> \(.*\)/.*@\1@;p}' | sort -u)"

mkdir -p "$dst$libdir"

exit_code=0

get_missing_reqs() {
  reqs=""
  for tgt;do
    read hdr opts <"$tgt"
    case "$hdr" in
      ?ELF*)
        local interp="$(objcopy -j .interp "$1" -O binary /proc/self/fd/1 | tr -d \\0)"
        test -z "$interp" || need_copy "$interp" "$dst" $libpath && interpreters="$interpreters $interp"
        reqs="$reqs `get_missing_elf_reqs "$tgt"`" ;;
      "#!"*)
        local interp="${hdr#\#\!}"
        if need_copy "$interp" "$dst";then interpreters="$interpreters $interp";fi
      ;;
      *) echo "Unknown program $tgt - $hdr" >&2 ;;
    esac
  done
}

get_missing_elf_reqs() {
  local check lib s3 s4 arch=""
  objdump -p "$1" | while read check lib s3 s4;do
    if test "$lib $s3" == "file format";then
      arch="$s4"
      continue
    fi
    test "$check" == "NEEDED" || continue
    need_copy "$lib" "$dst$libdir" $libpath || continue
    if need_copy ${arch:+-a "$arch"} -v "$lib" $libdirs;then
      echo "ERROR: Cannot find $lib" >&2
      exit_code=1
    fi
  done
}

# copy only if not existing: name,dirnames
need_copy() {
  local arch
  test "$1" != "-a" || { arch="$2"; shift 2; }
  test "$1" != "-v" || { local verbose="1"; shift; }
  local src="$1"
  local name="`basename "$src"`"
  shift
  local missing="yes"
  for testdir;do
    test ! -e "$testdir/$name" || {
      test "$src" != "$name" -a -e "$src" -a "$src" -nt "$testdir/$name" && continue
      test -z "$arch" -o "$(objdump -p "$testdir/$name" | grep -o "file format .*" | cut -f3 -d" ")" = "$arch" || continue
      missing="no"
      test -z "$verbose" || echo "$testdir/$name"
      break
    }
  done

  test "$missing" = "yes"
}

copy_exe() {
  local src prog_dir dst_bin
  if test -e "$1";then src="$1"; else src="`type -path "$1"`";fi
  if test -z "$src";then
    echo "ERROR: $1 not found"
    exit_code=1
  fi

  if test -n "$bindir";then dst_bin="$bindir";else
    prog_dir="`dirname "$src"`"
    test "$prog_dir" != "." || prog_dir="/bin"
    dst_bin="$dst/$prog_dir"
  fi
  test -d "$dst_bin" || mkdir -p "$dst_bin"

  local name="`basename "$src"`"
  if need_copy "$src" "$dst_bin" $libpath;then
    if test -L "$dst_bin/$name";then rm "$dst_bin/$name";fi
    cp -v "$src" "$dst_bin"
    if test -n "$include_man";then
      manpages=/usr/share/man/man[18]/$name.*
      for manpage in $manpages;do
        if test -e "$manpage";then
          cp -v --parents "$manpage" "$dst"
        fi
      done
    fi
    get_missing_reqs "$src"

    while test -n "$reqs";do
      for lib in $reqs; do
        cp -v "$lib" "$dst$libdir"
      done
      get_missing_reqs $reqs
    done
  fi
}

for prog;do
  copy_exe "$prog"
done

bindir=""
while test -n "$interpreters";do
  intlist="$interpreters"
  interpreters=""
  for interp in $intlist;do
    copy_exe "$interp"
  done
done

exit $exit_code
